<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
   	http://www.springframework.org/schema/context	
	http://www.springframework.org/schema/context/spring-context-4.1.xsd	
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<!--securityManager是shiro的核心，初始化时协调各个模块运行-->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <!--单个realm使用realm,如果有多个realm，使用realms属性代替-->  
        <property name="realm" ref="shiroRealm" />  
        <!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->  
    </bean>  
  
    <!--realm配置，realm是shiro的桥梁，它主要是用来判断subject是否可以登录及权限等-->  
    <bean id="shiroRealm" class="com.hejiascm.security.ShiroRealm">  
        <!-- <property name="userService" ref="com.hejiascm.service.UsersService" />-->
    </bean>  
    <!--  <bean id="userService" class="com.hejiascm.service.UsersServiceImpl" />-->
      
    <!--shiro过滤器配置，bean的id值须与web中的filter-name的值相同-->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager" />  
        <!-- 没有权限或者失败后跳转的页面 -->  
        <property name="loginUrl" value="/index.jsp" />  
        <property name="successUrl" value="/loginSuccess.jsp" />  
        <property name="unauthorizedUrl" value="" />  
        <property name="filterChainDefinitions">  
            <value>   
                /Login = anon
                /Users = anon
                /** = anon<!--  authcBasic or authc --> 
            </value>  
        </property>  
    </bean> 
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->    
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>    
        
    <!-- AOP式方法级权限检查  -->  
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">    
        <property name="proxyTargetClass" value="true" />    
    </bean>    
      
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">    
        <property name="securityManager" ref="securityManager"/>    
    </bean>  
    
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>  
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
    	<property name="securityManager" ref="securityManager"/>  
	</bean> 
	
	<context:component-scan base-package="com.hejiascm.security" />
</beans:beans>
